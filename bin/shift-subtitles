#!/usr/bin/python3 -u
# #-*- coding:utf-8 -*-
import argparse
import sys
import codecs
from datetime import datetime, timedelta

class subtitle:

    def __init__(self, idsub, start, end, txt):
        self.idsub = idsub
        self.start = datetime.strptime(start, "%H:%M:%S,%f")
        self.end = datetime.strptime(end, "%H:%M:%S,%f")
        self.txt = txt

    def __repr__(self):
        return "%s\n" % self.idsub \
            + "%s --> %s\n" % (self.start.time().strftime("%H:%M:%S,%f")[:-3], self.end.time().strftime("%H:%M:%S,%f")[:-3]) \
            + '\n'.join(self.txt)

    def shift(self, delta):
        self.start += delta
        self.end += delta

def parse(path):
    with codecs.open(path, 'r', 'utf-8-sig') as f:
        subtitles = []
        state = 1
        for line in f:
            line = line[:-2]
            if line == u'':
                subtitles.append(subtitle(idsub, start[:-1], end[1:], txt))
                state = 0
            if state == 1:
                txt = []
                idsub = int(line)
            elif state == 2:
                start, end = line.split(u'-->')
            else:
                txt.append(line)
            state += 1
        else:
            if state != 0:
                subtitles.append(subtitle(idsub, start[:-1], end[1:], txt))
        return subtitles


parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,
                                add_help=True,
                                description='Subtitle Time Modifier tool')
parser.add_argument("--file", metavar="FILE", type=str, help="The input file containing subtitles")
parser.add_argument("--dialog", metavar="NUMBER", type=int, help="The dialog number in subtitle file")
parser.add_argument("--time", metavar="TIME", type=str, help="The time in the video file when the dialog is heard")


if len(sys.argv) == 1:
    parser.print_help()
    sys.exit(1)



namespace = parser.parse_args()
try:
    new_datetime = datetime.strptime(namespace.time, '%H:%M:%S,%f')
except:
    new_datetime = datetime.strptime(namespace.time, '%H:%M:%S')
try:
    subtitles = parse(namespace.file)
    old_datetime = subtitles[namespace.dialog-1].start
    delta = new_datetime - old_datetime
    for s in subtitles:
        s.shift(delta)
        print(s)
except KeyboardInterrupt:
    print('Interrupted.', file=sys.stderr)


